version: '3.7'

networks:
  microservice_example:
    driver: bridge
  traefik:
    name: traefik

services:
  traefik:
    image: traefik:2.11.0
    command:
      - "--log.level=INFO"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedByDefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8085:8080" # The Web UI (enabled by --api.insecure=true)
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - traefik

  postgres:
    image: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
      POSTGRES_DB: microservice_example
    ports:
      - 5433:5432
    networks:
      - microservice_example
    volumes:
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql


  app:
    build: .
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=PathPrefix(`/app`)"
      - "traefik.http.routers.whoami.entrypoints=web"
      - "traefik.http.services.app.loadbalancer.server.port=8080"
      
    environment:
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
      POSTGRES_URL: jdbc:postgresql://postgres/microservice_example
    depends_on:
      - postgres
    networks:
      - microservice_example
      - traefik
